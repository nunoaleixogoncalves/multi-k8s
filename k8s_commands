kebectl apply -f <file>
kubectl describe <type> <name>
kubectl delete -f <file>
kubectl delete <type> <name>

kubectl get <type> -o wide
kubectl get <type>
<type> = pods/services/deployments/pv/pvc/secrets

kubectl set image deployment/client-deployment client=nunoaleixogoncalves/multi-client:1.0.0

kubectl create secret <type> <name> --from-literal <key=value>
<type> = generic/docker-registry/tls

minikube docker-env
eval $(minikube docker-env)
docker ps

kubectl logs client-deployment-64fd548cc-qc2kk
docker logs 

kubectl exec -it client-deployment-64fd548cc-qc2kk
docker exec -it

docker system prune -a // clean cache inside node after docker configured

minikube addons enable ingress
kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/nginx-0.28.0/deploy/static/mandatory.yaml

kubectl get svc -n ingress-nginx

kubectl get namespaces
kubectl -n cattle-system get all

# minikube testing
minikube start
minikube delete
minikube ip
minikube dashboard

kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/nginx-0.28.0/deploy/static/mandatory.yaml
kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/nginx-0.28.0/deploy/static/provider/baremetal/service-nodeport.yaml

kubectl create secret generic pgpassword --from-literal PGPASSWORD=<password>

docker run -it -v $(pwd):/app ruby:2.4 sh
gem install travis --no-document
gem install travis
travis login
travis encrypt-file service-account.json



### Cert Manager Breaking Changes

kubectl apply --validate=false -f https://raw.githubusercontent.com/jetstack/cert-manager/release-0.11/deploy/manifests/00-crds.yaml
kubectl create namespace cert-manager
helm repo add jetstack https://charts.jetstack.io
helm repo update
helm install \
  cert-manager \
  --namespace cert-manager \
  --version v0.11.0 \
  jetstack/cert-manager


issuer.yaml file
In the "Issuer Config File" lecture, the yaml file will need a few small changes per these docs:

https://docs.cert-manager.io/en/latest/tasks/issuers/setup-acme/index.html#creating-a-basic-acme-issuer

1. Make sure to update apiVersion as shown on line 1

2. Add the solvers property

apiVersion: cert-manager.io/v1alpha2
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: "youremail@email.com"
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
      - http01:
          ingress:
            class: nginx


certificate.yaml file
In the "Certificate Config File" lecture, only one minor change is required.

1. The only change needed in this file is to update the apiVersion on line 1:

apiVersion: cert-manager.io/v1alpha2



ingress-service.yaml file
In the "Ingress Config for HTTPS" lecture, we need to change one of the annotations.

certmanager.k8s.io/cluster-issuer: 'letsencrypt-prod'
change to:
cert-manager.io/cluster-issuer: "letsencrypt-prod"



#install skaffold.dev

curl -Lo skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64
sudo install skaffold /usr/local/bin/

skaffold version
skaffold dev